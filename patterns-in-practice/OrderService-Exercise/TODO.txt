Exercise: Combination of Patterns - OrderService
---------------------------------------------------------------------

Sie sollen eine gegebene (legacy) Klasse durech die Verwendung von 
Design Patterns erweitern, ohne sie jedoch zu modifizieren.
 
1) Adapter Pattern
	Implementieren Sie einen Object-Adapter, der das gegebene Interface
	"OrderService" and die gegebene Klasse "OrderProcessor" anpasst.
	Dabei sind sowohl die Parameter als auch das Error-Handling anzupassen.
	Ersetzen Sie die Checked Exceptions durch eine RuntimeException mit
	dem Namen "ServiceException".
	
2) Decorator
	Fügen Sie eine abstrakte Decorator Klasse "OrderServiceDecorator"
	und eine konkrete Decorator Klasse "OrderServiceLoggingDecorator"
	hinzu. 
	Der "OrderServiceLoggingDecorator" schreibt die Order ID und die
	Gesamtsumme der Bestellung in einen "Logger" der als Singleton
	implementiert ist und eine Liste von Log-Messages speichern kann.

3) Factory Method Pattern
	Schließlich soll noch eine Factory Methode im Interface "ServiceFactory"
 	definiert und in der Klasse "ServiceFactoryImpl" implementiert werden.
 	Das Interface definiert eine Konstante "INSTANCE" über die auf eine 
 	Instanz der Factory zugegriffen werden kann.

Kapseln Sie alle Implementierungsklassen innerhalb des Package "org.se.lab".

Testen Sie Ihre Implementierungen mit der Klasse "OrderServiceImplTest".

Tipp: Sie können selber Testfälle erstellen, um Zwischenschritte Ihrer 
Implementierung zu überprüfen.
